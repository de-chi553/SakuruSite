{"ast":null,"code":"var _jsxFileName = \"/Users/okataichi/Desktop/SakuruSite/jsx/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { storage, db, collection, addDoc, ref, uploadBytes, getDownloadURL } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userData = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.userData) || {};\n  const [college, setCollege] = useState('');\n  const [content, setContent] = useState('');\n  const [field, setField] = useState('');\n  const [actplace, setActplace] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const generateRandomID = () => {\n    return Math.floor(Math.random() * 1000000).toString();\n  };\n  const uploadImage = async (file, randomId) => {\n    try {\n      const storageRef = ref(storage, `images/${userData.UserID}/${randomId}`);\n      await uploadBytes(storageRef, file);\n      return getDownloadURL(storageRef);\n    } catch (error) {\n      console.error('Error uploading image:', error.message);\n      throw error;\n    }\n  };\n  const addPost = async (userId, username, collegeName, fieldName, postContent, actplaceValue, imageRandomId) => {\n    try {\n      const postRef = collection(db, 'Post');\n      await addDoc(postRef, {\n        userID: userId,\n        username: username,\n        college: collegeName,\n        Field: {\n          field: fieldName,\n          Content: {\n            contents: postContent,\n            actplace: actplaceValue,\n            imageRandomId: imageRandomId\n          }\n        }\n      });\n      setMessage('投稿が送信されました');\n    } catch (error) {\n      console.error('Error adding post:', error.message);\n      setMessage('投稿の送信に失敗しました');\n    }\n  };\n  const handlePost = async () => {\n    try {\n      const randomId = generateRandomID();\n      let imageRandomId = '';\n      if (selectedImage) {\n        imageRandomId = await uploadImage(selectedImage, randomId);\n      }\n      await addPost(userData.UserID, userData.username, college, field, content, actplace, imageRandomId);\n    } catch (error) {\n      console.error('Error handling post:', error.message);\n      setMessage('投稿の送信に失敗しました');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"college\",\n      children: \"College\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"college\",\n      value: college,\n      onChange: e => setCollege(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"field\",\n      children: \"Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"field\",\n      value: field,\n      onChange: e => setField(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"content\",\n      children: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"actplace\",\n      children: \"Activity Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"actplace\",\n      value: actplace,\n      onChange: e => setActplace(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image\",\n      children: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"image\",\n      onChange: e => setSelectedImage(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"ivgmvSvWk7LuH0ln7L3LQulm5po=\", false, function () {\n  return [useLocation];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useLocation","storage","db","collection","addDoc","ref","uploadBytes","getDownloadURL","jsxDEV","_jsxDEV","Post","_s","_location$state","location","userData","state","college","setCollege","content","setContent","field","setField","actplace","setActplace","message","setMessage","selectedImage","setSelectedImage","generateRandomID","Math","floor","random","toString","uploadImage","file","randomId","storageRef","UserID","error","console","addPost","userId","username","collegeName","fieldName","postContent","actplaceValue","imageRandomId","postRef","userID","Field","Content","contents","handlePost","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","type","files","onClick","_c","$RefreshReg$"],"sources":["/Users/okataichi/Desktop/SakuruSite/jsx/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { storage, db, collection, addDoc, ref, uploadBytes, getDownloadURL } from '../firebase';\n\nconst Post = () => {\n  const location = useLocation();\n  const userData = location.state?.userData || {};\n\n  const [college, setCollege] = useState('');\n  const [content, setContent] = useState('');\n  const [field, setField] = useState('');\n  const [actplace, setActplace] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const generateRandomID = () => {\n    return Math.floor(Math.random() * 1000000).toString();\n  };\n\n  const uploadImage = async (file, randomId) => {\n    try {\n      const storageRef = ref(storage, `images/${userData.UserID}/${randomId}`);\n      await uploadBytes(storageRef, file);\n\n      return getDownloadURL(storageRef);\n    } catch (error) {\n      console.error('Error uploading image:', error.message);\n      throw error;\n    }\n  };\n\n  const addPost = async (userId, username, collegeName, fieldName, postContent, actplaceValue, imageRandomId) => {\n    try {\n      const postRef = collection(db, 'Post');\n      await addDoc(postRef, {\n        userID: userId,\n        username: username,\n        college: collegeName,\n        Field: {\n          field: fieldName,\n          Content: {\n            contents: postContent,\n            actplace: actplaceValue,\n            imageRandomId: imageRandomId,\n          },\n        }\n      });\n      setMessage('投稿が送信されました');\n    } catch (error) {\n      console.error('Error adding post:', error.message);\n      setMessage('投稿の送信に失敗しました');\n    }\n  };\n\n  const handlePost = async () => {\n    try {\n      const randomId = generateRandomID();\n      let imageRandomId = '';\n\n      if (selectedImage) {\n        imageRandomId = await uploadImage(selectedImage, randomId);\n      }\n\n      await addPost(userData.UserID, userData.username, college, field, content, actplace, imageRandomId);\n    } catch (error) {\n      console.error('Error handling post:', error.message);\n      setMessage('投稿の送信に失敗しました');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Post</h2>\n      <label htmlFor=\"college\">College</label>\n      <input id=\"college\" value={college} onChange={(e) => setCollege(e.target.value)} />\n      <label htmlFor=\"field\">Field</label>\n      <input id=\"field\" value={field} onChange={(e) => setField(e.target.value)} />\n      <label htmlFor=\"content\">Content</label>\n      <textarea id=\"content\" value={content} onChange={(e) => setContent(e.target.value)} />\n      <label htmlFor=\"actplace\">Activity Place</label>\n      <input id=\"actplace\" value={actplace} onChange={(e) => setActplace(e.target.value)} />\n      <label htmlFor=\"image\">Image</label>\n      <input type=\"file\" id=\"image\" onChange={(e) => setSelectedImage(e.target.files[0])} />\n      <button onClick={handlePost}>Post</button>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Post;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,EAAE,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhG,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAG,EAAAF,eAAA,GAAAC,QAAQ,CAACE,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBE,QAAQ,KAAI,CAAC,CAAC;EAE/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM6B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;IAC5C,IAAI;MACF,MAAMC,UAAU,GAAG/B,GAAG,CAACJ,OAAO,EAAE,UAAUa,QAAQ,CAACuB,MAAM,IAAIF,QAAQ,EAAE,CAAC;MACxE,MAAM7B,WAAW,CAAC8B,UAAU,EAAEF,IAAI,CAAC;MAEnC,OAAO3B,cAAc,CAAC6B,UAAU,CAAC;IACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACd,OAAO,CAAC;MACtD,MAAMc,KAAK;IACb;EACF,CAAC;EAED,MAAME,OAAO,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,KAAK;IAC7G,IAAI;MACF,MAAMC,OAAO,GAAG7C,UAAU,CAACD,EAAE,EAAE,MAAM,CAAC;MACtC,MAAME,MAAM,CAAC4C,OAAO,EAAE;QACpBC,MAAM,EAAER,MAAM;QACdC,QAAQ,EAAEA,QAAQ;QAClB1B,OAAO,EAAE2B,WAAW;QACpBO,KAAK,EAAE;UACL9B,KAAK,EAAEwB,SAAS;UAChBO,OAAO,EAAE;YACPC,QAAQ,EAAEP,WAAW;YACrBvB,QAAQ,EAAEwB,aAAa;YACvBC,aAAa,EAAEA;UACjB;QACF;MACF,CAAC,CAAC;MACFtB,UAAU,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACd,OAAO,CAAC;MAClDC,UAAU,CAAC,cAAc,CAAC;IAC5B;EACF,CAAC;EAED,MAAM4B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMlB,QAAQ,GAAGP,gBAAgB,CAAC,CAAC;MACnC,IAAImB,aAAa,GAAG,EAAE;MAEtB,IAAIrB,aAAa,EAAE;QACjBqB,aAAa,GAAG,MAAMd,WAAW,CAACP,aAAa,EAAES,QAAQ,CAAC;MAC5D;MAEA,MAAMK,OAAO,CAAC1B,QAAQ,CAACuB,MAAM,EAAEvB,QAAQ,CAAC4B,QAAQ,EAAE1B,OAAO,EAAEI,KAAK,EAAEF,OAAO,EAAEI,QAAQ,EAAEyB,aAAa,CAAC;IACrG,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACd,OAAO,CAAC;MACpDC,UAAU,CAAC,cAAc,CAAC;IAC5B;EACF,CAAC;EAED,oBACEhB,OAAA;IAAA6C,QAAA,gBACE7C,OAAA;MAAA6C,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbjD,OAAA;MAAOkD,OAAO,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxCjD,OAAA;MAAOmD,EAAE,EAAC,SAAS;MAACC,KAAK,EAAE7C,OAAQ;MAAC8C,QAAQ,EAAGC,CAAC,IAAK9C,UAAU,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFjD,OAAA;MAAOkD,OAAO,EAAC,OAAO;MAAAL,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpCjD,OAAA;MAAOmD,EAAE,EAAC,OAAO;MAACC,KAAK,EAAEzC,KAAM;MAAC0C,QAAQ,EAAGC,CAAC,IAAK1C,QAAQ,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EjD,OAAA;MAAOkD,OAAO,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxCjD,OAAA;MAAUmD,EAAE,EAAC,SAAS;MAACC,KAAK,EAAE3C,OAAQ;MAAC4C,QAAQ,EAAGC,CAAC,IAAK5C,UAAU,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFjD,OAAA;MAAOkD,OAAO,EAAC,UAAU;MAAAL,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChDjD,OAAA;MAAOmD,EAAE,EAAC,UAAU;MAACC,KAAK,EAAEvC,QAAS;MAACwC,QAAQ,EAAGC,CAAC,IAAKxC,WAAW,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFjD,OAAA;MAAOkD,OAAO,EAAC,OAAO;MAAAL,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpCjD,OAAA;MAAOwD,IAAI,EAAC,MAAM;MAACL,EAAE,EAAC,OAAO;MAACE,QAAQ,EAAGC,CAAC,IAAKpC,gBAAgB,CAACoC,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFjD,OAAA;MAAQ0D,OAAO,EAAEd,UAAW;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CjD,OAAA;MAAA6C,QAAA,EAAI9B;IAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAnFID,IAAI;EAAA,QACSV,WAAW;AAAA;AAAAoE,EAAA,GADxB1D,IAAI;AAqFV,eAAeA,IAAI;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}