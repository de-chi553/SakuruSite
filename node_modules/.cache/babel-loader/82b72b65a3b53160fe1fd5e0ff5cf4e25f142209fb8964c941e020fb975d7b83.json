{"ast":null,"code":"var _jsxFileName = \"/Users/okataichi/Desktop/SakuruSite/jsx/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom'; // React RouterのuseHistoryを使用\nimport { db, storage } from '../firebase'; // Assuming you have storage initialized in firebase.js\nimport { collection, addDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage'; // Import ref function from firebase/storage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  userData\n}) => {\n  _s();\n  const history = Navigate();\n  const [college, setCollege] = useState('');\n  const [content, setContent] = useState('');\n  const [field, setField] = useState('');\n  const [actplace, setActplace] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedImageURI, setSelectedImageURI] = useState(null); // 新しいステート変数を追加\n\n  const generateRandomID = () => {\n    return Math.floor(Math.random() * 1000000).toString();\n  };\n  const uploadImage = async (uri, randomId) => {\n    try {\n      // 画像のURIからBlobを生成\n      const response = await fetch(uri);\n      const blob = await response.blob();\n\n      // Firebase StorageにBlobをアップロード\n      const storageRef = ref(storage, `images/${userData.UserID}/${randomId}`);\n      await uploadBytes(storageRef, blob);\n\n      // アップロード後、画像のURLを取得して返す\n      return getDownloadURL(storageRef);\n    } catch (error) {\n      console.error('画像のアップロードエラー:', error.message);\n      throw error;\n    }\n  };\n  const addPost = async (userId, username, collegeName, fieldName, postContent, actplaceValue, imageRandomId) => {\n    try {\n      const postRef = collection(db, 'Post');\n      await addDoc(postRef, {\n        userID: userId,\n        username: username,\n        college: collegeName,\n        Field: {\n          field: fieldName,\n          Content: {\n            contents: postContent,\n            actplace: actplaceValue,\n            imageRandomId: imageRandomId\n          }\n        }\n      });\n      setMessage('投稿が送信されました');\n    } catch (error) {\n      console.error('Error adding post:', error.message);\n      setMessage('投稿の送信中にエラーが発生しました');\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      if (!selectedImageURI) {\n        throw new Error('画像を選択してください');\n      }\n      const randomId = generateRandomID();\n      const imageUrl = await uploadImage(selectedImageURI, randomId);\n      await addPost(userData.UserID, userData.Username, college, field, content, actplace, randomId);\n      setMessage('投稿が送信されました');\n    } catch (error) {\n      console.error('Error handling submit:', error.message);\n      setMessage('投稿の送信中にエラーが発生しました');\n    }\n  };\n  const pickImage = async () => {\n    try {\n      // 画像の選択ロジック\n    } catch (error) {\n      console.error('Error picking image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: userData.Username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setContent(e.target.value),\n      placeholder: \"\\u6295\\u7A3F\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n      style: {\n        borderWidth: 1,\n        borderColor: 'gray',\n        borderRadius: 5,\n        padding: 5,\n        width: 200,\n        height: 100,\n        marginVertical: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), selectedImageURI && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedImageURI,\n      alt: \"Selected Image\",\n      style: {\n        width: 200,\n        height: 200,\n        marginVertical: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pickImage,\n      style: {\n        borderWidth: 1,\n        borderRadius: 10,\n        backgroundColor: '#C1191A',\n        color: '#fff',\n        width: '8%'\n      },\n      children: \"\\u753B\\u50CF\\u3092\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), message !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: message.includes('成功') ? 'green' : 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        borderWidth: 1,\n        borderRadius: 10,\n        backgroundColor: '#C1191A',\n        color: '#fff',\n        width: '8%',\n        marginTop: '1%'\n      },\n      children: \"\\u6295\\u7A3F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"EbdW8FcCOIt4pxngTMn2Af8ncoQ=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Navigate","db","storage","collection","addDoc","ref","uploadBytes","getDownloadURL","jsxDEV","_jsxDEV","Post","userData","_s","history","college","setCollege","content","setContent","field","setField","actplace","setActplace","message","setMessage","selectedImageURI","setSelectedImageURI","generateRandomID","Math","floor","random","toString","uploadImage","uri","randomId","response","fetch","blob","storageRef","UserID","error","console","addPost","userId","username","collegeName","fieldName","postContent","actplaceValue","imageRandomId","postRef","userID","Field","Content","contents","handleSubmit","Error","imageUrl","Username","pickImage","style","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","borderWidth","borderColor","borderRadius","padding","width","height","marginVertical","src","alt","onClick","backgroundColor","color","includes","marginTop","_c","$RefreshReg$"],"sources":["/Users/okataichi/Desktop/SakuruSite/jsx/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Navigate} from 'react-router-dom'; // React RouterのuseHistoryを使用\nimport { db, storage } from '../firebase'; // Assuming you have storage initialized in firebase.js\nimport { collection, addDoc } from 'firebase/firestore';\nimport { ref,uploadBytes, getDownloadURL  } from 'firebase/storage'; // Import ref function from firebase/storage\n\nconst Post = ({ userData }) => {\n  const history = Navigate();\n  const [college, setCollege] = useState('');\n  const [content, setContent] = useState('');\n  const [field, setField] = useState('');\n  const [actplace, setActplace] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedImageURI, setSelectedImageURI] = useState(null); // 新しいステート変数を追加\n\n  const generateRandomID = () => {\n    return Math.floor(Math.random() * 1000000).toString();\n  };\n\n  const uploadImage = async (uri, randomId) => {\n    try {\n      // 画像のURIからBlobを生成\n      const response = await fetch(uri);\n      const blob = await response.blob();\n  \n      // Firebase StorageにBlobをアップロード\n      const storageRef = ref(storage, `images/${userData.UserID}/${randomId}`);\n      await uploadBytes(storageRef, blob);\n  \n      // アップロード後、画像のURLを取得して返す\n      return getDownloadURL(storageRef);\n    } catch (error) {\n      console.error('画像のアップロードエラー:', error.message);\n      throw error;\n    }\n  };\n\n  const addPost = async (userId, username, collegeName, fieldName, postContent, actplaceValue, imageRandomId) => {\n    try {\n      const postRef = collection(db, 'Post');\n      await addDoc(postRef, {\n        userID: userId,\n        username: username,\n        college: collegeName,\n        Field: {\n          field: fieldName,\n          Content: {\n            contents: postContent,\n            actplace: actplaceValue,\n            imageRandomId: imageRandomId,\n          },\n        }\n      });\n      setMessage('投稿が送信されました');\n    } catch (error) {\n      console.error('Error adding post:', error.message);\n      setMessage('投稿の送信中にエラーが発生しました');\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (!selectedImageURI) {\n        throw new Error('画像を選択してください');\n      }\n      const randomId = generateRandomID();\n      const imageUrl = await uploadImage(selectedImageURI, randomId);\n      await addPost(userData.UserID, userData.Username, college, field, content, actplace, randomId);\n      setMessage('投稿が送信されました');\n    } catch (error) {\n      console.error('Error handling submit:', error.message);\n      setMessage('投稿の送信中にエラーが発生しました');\n    }\n  };\n\n  const pickImage = async () => {\n    try {\n      // 画像の選択ロジック\n    } catch (error) {\n      console.error('Error picking image:', error);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      <h2>{userData.Username}</h2>\n      <div>\n        {/* 大学選択 */}\n      </div>\n      <div>\n        {/* 分野選択 */}\n      </div>\n      <div>\n        {/* 活動場所選択 */}\n      </div>\n      <textarea\n        onChange={(e) => setContent(e.target.value)}\n        placeholder=\"投稿内容を入力してください\"\n        style={{ borderWidth: 1, borderColor: 'gray', borderRadius: 5, padding: 5, width: 200, height: 100, marginVertical: 10 }}\n      />\n      {selectedImageURI && <img src={selectedImageURI} alt=\"Selected Image\" style={{ width: 200, height: 200, marginVertical: 10 }} />}\n      <button onClick={pickImage} style={{ borderWidth: 1, borderRadius: 10, backgroundColor: '#C1191A', color: '#fff', width: '8%' }}>\n        画像を選択\n      </button>\n      {message !== '' && <p style={{ color: message.includes('成功') ? 'green' : 'red' }}>{message}</p>}\n      <button onClick={handleSubmit} style={{ borderWidth: 1, borderRadius: 10, backgroundColor: '#C1191A', color: '#fff', width: '8%', marginTop: '1%' }}>\n        投稿\n      </button>\n    </div>\n  );\n};\n\nexport default Post;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}