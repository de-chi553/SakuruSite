{"ast":null,"code":"var _jsxFileName = \"/Users/okataichi/Desktop/SakuruSite/jsx/src/components/All.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db, storage, auth } from '../firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport './styles.css'; // Assume you have a CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst All = ({\n  selectedUniversity\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n      if (currentUser) {\n        console.log('User authenticated:', currentUser.uid);\n      } else {\n        console.log('No user authenticated');\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // All コンポーネントまたは Culture コンポーネント内の useEffect 内での Firestore データの取得部分に console.log を追加します\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const q = query(collection(db, 'Post'), where('college', '==', selectedUniversity),\n        // クエリ条件が正しいか確認します\n        where('Field.field', 'in', ['体育系', '研究系', '文化系']) // クエリ条件が正しいか確認します\n        );\n        const querySnapshot = await getDocs(q);\n        const fetchedPosts = [];\n        console.log('Number of posts fetched:', querySnapshot.docs.length); // 取得したドキュメント数をログに出力します\n\n        await Promise.all(querySnapshot.docs.map(async doc => {\n          const postData = doc.data();\n          console.log('Post data:', postData); // 取得したドキュメントのデータをログに出力します\n\n          // ここで postData の構造を確認し、必要なデータが正しく取得されているかどうかを確認します\n          // 必要に応じて postData の中身をログに出力して確認します\n\n          const imageRef = ref(storage, `images/${postData.userID}/${postData.Field.Content.imageRandomId}`);\n          const imageUrl = await getDownloadURL(imageRef);\n          postData.imageUrl = imageUrl;\n          fetchedPosts.push({\n            id: doc.id,\n            ...postData\n          });\n        }));\n        setPosts(fetchedPosts);\n      } catch (error) {\n        console.error('Error fetching posts:', error.message);\n      }\n    };\n    if (selectedUniversity) {\n      fetchPosts();\n    }\n  }, [selectedUniversity]);\n  const nextPosts = () => {\n    if (currentIndex + 4 < posts.length) {\n      setCurrentIndex(currentIndex + 4);\n    }\n  };\n  const prevPosts = () => {\n    if (currentIndex - 4 >= 0) {\n      setCurrentIndex(currentIndex - 4);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: posts.slice(currentIndex, currentIndex + 2).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postContent\",\n          children: [post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            className: \"image\",\n            alt: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D: \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u6295\\u7A3F\\u5185\\u5BB9: \", post.Field && post.Field.Content && post.Field.Content.contents]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u6D3B\\u52D5\\u5834\\u6240: \", post.Field && post.Field.Content && post.Field.Content.actplace]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: posts.slice(currentIndex + 2, currentIndex + 4).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postContent\",\n          children: [post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            className: \"image\",\n            alt: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D: \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u6295\\u7A3F\\u5185\\u5BB9: \", post.Field.Content.contents]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u6D3B\\u52D5\\u5834\\u6240: \", post.Field.Content.actplace]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPosts,\n        className: \"button\",\n        children: \"\\u524D\\u3078\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPosts,\n        className: \"button\",\n        children: \"\\u6B21\\u3078\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(All, \"HXKuK4tvPDUa7aF55QrCycsbzFM=\");\n_c = All;\nexport default All;\nvar _c;\n$RefreshReg$(_c, \"All\");","map":{"version":3,"names":["React","useEffect","useState","db","storage","auth","collection","query","where","getDocs","ref","getDownloadURL","onAuthStateChanged","jsxDEV","_jsxDEV","All","selectedUniversity","_s","posts","setPosts","currentIndex","setCurrentIndex","setUser","unsubscribe","currentUser","console","log","uid","fetchPosts","q","querySnapshot","fetchedPosts","docs","length","Promise","all","map","doc","postData","data","imageRef","userID","Field","Content","imageRandomId","imageUrl","push","id","error","message","nextPosts","prevPosts","className","children","slice","post","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","contents","actplace","onClick","_c","$RefreshReg$"],"sources":["/Users/okataichi/Desktop/SakuruSite/jsx/src/components/All.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db, storage, auth } from '../firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport './styles.css'; // Assume you have a CSS file for styles\n\nconst All = ({ selectedUniversity }) => {\n  const [posts, setPosts] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      if (currentUser) {\n        console.log('User authenticated:', currentUser.uid);\n      } else {\n        console.log('No user authenticated');\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  // All コンポーネントまたは Culture コンポーネント内の useEffect 内での Firestore データの取得部分に console.log を追加します\nuseEffect(() => {\n  const fetchPosts = async () => {\n    try {\n      const q = query(\n        collection(db, 'Post'),\n        where('college', '==', selectedUniversity), // クエリ条件が正しいか確認します\n        where('Field.field', 'in', ['体育系', '研究系', '文化系']) // クエリ条件が正しいか確認します\n      );\n      const querySnapshot = await getDocs(q);\n      const fetchedPosts = [];\n\n      console.log('Number of posts fetched:', querySnapshot.docs.length); // 取得したドキュメント数をログに出力します\n\n      await Promise.all(\n        querySnapshot.docs.map(async (doc) => {\n          const postData = doc.data();\n          console.log('Post data:', postData); // 取得したドキュメントのデータをログに出力します\n\n          // ここで postData の構造を確認し、必要なデータが正しく取得されているかどうかを確認します\n          // 必要に応じて postData の中身をログに出力して確認します\n\n          const imageRef = ref(storage, `images/${postData.userID}/${postData.Field.Content.imageRandomId}`);\n          const imageUrl = await getDownloadURL(imageRef);\n          postData.imageUrl = imageUrl;\n          fetchedPosts.push({ id: doc.id, ...postData });\n        })\n      );\n\n      setPosts(fetchedPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n    }\n  };\n\n  if (selectedUniversity) {\n    fetchPosts();\n  }\n}, [selectedUniversity]);\n\n\n  const nextPosts = () => {\n    if (currentIndex + 4 < posts.length) {\n      setCurrentIndex(currentIndex + 4);\n    }\n  };\n\n  const prevPosts = () => {\n    if (currentIndex - 4 >= 0) {\n      setCurrentIndex(currentIndex - 4);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {posts.slice(currentIndex, currentIndex + 2).map((post) => (\n          <div key={post.id} className=\"postContainer\">\n            <div className=\"postContent\">\n              {post.imageUrl && <img src={post.imageUrl} className=\"image\" alt=\"Post\" />}\n              <div className=\"textContainer\">\n                <p>ユーザー名: {post.username}</p>\n                <p>投稿内容: {post.Field && post.Field.Content && post.Field.Content.contents}</p>\n<p>活動場所: {post.Field && post.Field.Content && post.Field.Content.actplace}</p>\n\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"row\">\n        {posts.slice(currentIndex + 2, currentIndex + 4).map((post) => (\n          <div key={post.id} className=\"postContainer\">\n            <div className=\"postContent\">\n              {post.imageUrl && <img src={post.imageUrl} className=\"image\" alt=\"Post\" />}\n              <div className=\"textContainer\">\n                <p>ユーザー名: {post.username}</p>\n                <p>投稿内容: {post.Field.Content.contents}</p>\n                <p>活動場所: {post.Field.Content.actplace}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"buttonContainer\">\n        <button onClick={prevPosts} className=\"button\">前へ</button>\n        <button onClick={nextPosts} className=\"button\">次へ</button>\n      </div>\n    </div>\n  );\n};\n\nexport default All;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}